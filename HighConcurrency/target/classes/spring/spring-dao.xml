<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!--配置整合mybatis过程-->
    <!--1.配置数据库相关参数properties的属性：${url}
    -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--2:数据库连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--配置连接池属性-->
        <property name="driverClass" value="${driver}"></property>
        <property name="jdbcUrl" value="${url}"/>
        <property name="user" value="${user}"/>
        <property name="password" value="${password}"/>

        <!--c3p0配置连接池的私有属性-->
        <!--<bean class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" id="dataSource">
    <property name="driverClass" value="${dbDriver}"/>
    <property name="jdbcUrl" value="${dbURL}"/>
    <property name="user" value="${dbUsername}"/>
    <property name="password" value="${dbPassword}"/>
    <property name="initialPoolSize" value="5"/>
    <property name="maxPoolSize" value="50"/>
    <property name="minPoolSize" value="5"/>
    <property name="maxIdleTime" value="3000"/>
</bean>-->
        <property name="initialPoolSize" value="10"/>
       <property name="minPoolSize" value="10"/>
        <!--关闭连接之后 不自动commit-->
        <property name="autoCommitOnClose" value="false"/>
        <!--获取连接超时时间-->
        <property name="checkoutTimeout" value="1000"/>
        <!--当获取连接失败重试次数-->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>
    <!--3.配置SqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置mybatis全局配置文件：mybatis-configure.xml-->
        <property name="configLocation" value="classpath:mybatis-configure.xml"/>
        <!--扫描entity包  使用别名org.seckill.entity.Seckill ==>seckill-->
        <property name="typeAliasesPackage" value="org.seckill.entity"/>
        <!--扫描sql的配置文件：mapper需要的xml文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>
    <!--4:配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
             <!--注入sqlSessionFactory-->
            <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
             <!--给出需要扫描Dao接口包-->
             <property name="basePackage" value="org.seckill.dao"/>
    </bean>
    <!--RedisDao-->
    <bean id="redisDao" class="org.seckill.dao.cache.RedisDao">
        <constructor-arg index ="0" value="localhost"></constructor-arg>
        <constructor-arg index="1" value="6379"/>
    </bean>
</beans>